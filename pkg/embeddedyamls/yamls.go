/*
SPDX-License-Identifier: Apache-2.0

Copyright Contributors to the Submariner project.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file is auto-generated by yamls2go.go
package embeddedyamls

const (
	Deploy_crds_submariner_io_brokers_yaml = `---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: brokers.submariner.io
spec:
  group: submariner.io
  names:
    kind: Broker
    listKind: BrokerList
    plural: brokers
    singular: broker
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Broker is the Schema for the brokers API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BrokerSpec defines the desired state of Broker.
            properties:
              clustersetIPCIDRRange:
                description: ClustersetIP supernet range for allocating ClustersetIPCIDRs
                  to each cluster.
                type: string
              clustersetIPEnabled:
                description: Enable ClustersetIP default for connecting clusters.
                type: boolean
              components:
                description: List of the components to be installed - any of [service-discovery,
                  connectivity].
                items:
                  type: string
                type: array
              defaultCustomDomains:
                description: List of domains to use for multi-cluster service discovery.
                items:
                  type: string
                type: array
              defaultGlobalnetClusterSize:
                description: Default cluster size for GlobalCIDR allocated to each
                  cluster (amount of global IPs).
                type: integer
              globalnetCIDRRange:
                description: GlobalCIDR supernet range for allocating GlobalCIDRs
                  to each cluster.
                type: string
              globalnetEnabled:
                description: Enable support for Overlapping CIDRs in connecting clusters.
                type: boolean
            type: object
          status:
            description: BrokerStatus defines the observed state of Broker.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
`
	Deploy_crds_submariner_io_submariners_yaml = `---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: submariners.submariner.io
spec:
  group: submariner.io
  names:
    kind: Submariner
    listKind: SubmarinerList
    plural: submariners
    singular: submariner
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Submariner is the Schema for the submariners API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SubmarinerSpec defines the desired state of Submariner.
            properties:
              airGappedDeployment:
                type: boolean
              broker:
                description: Type of broker (must be "k8s").
                type: string
              brokerK8sApiServer:
                description: The broker API URL.
                type: string
              brokerK8sApiServerToken:
                description: The broker API Token.
                type: string
              brokerK8sCA:
                description: The broker certificate authority.
                type: string
              brokerK8sInsecure:
                type: boolean
              brokerK8sRemoteNamespace:
                description: The Broker namespace.
                type: string
              brokerK8sSecret:
                type: string
              cableDriver:
                description: Cable driver implementation - any of [libreswan, wireguard,
                  vxlan].
                type: string
              ceIPSecDebug:
                description: Enable logging IPsec debugging information.
                type: boolean
              ceIPSecForceUDPEncaps:
                description: Force UDP encapsulation for IPsec.
                type: boolean
              ceIPSecIKEPort:
                description: The IPsec IKE port (500 usually).
                type: integer
              ceIPSecNATTPort:
                description: The IPsec NAT traversal port (4500 usually).
                type: integer
              ceIPSecPSK:
                description: The IPsec Pre-Shared Key which must be identical in all
                  route agents across the cluster.
                type: string
              ceIPSecPSKSecret:
                type: string
              ceIPSecPreferredServer:
                description: Enable this cluster as a preferred server for data-plane
                  connections.
                type: boolean
              clusterCIDR:
                description: The cluster CIDR.
                type: string
              clusterID:
                description: The cluster ID used to identify the tunnels.
                type: string
              clustersetIPCIDR:
                description: ClustersetIP CIDR for allocating ClustersetIPs to exported
                  services.
                type: string
              clustersetIPEnabled:
                description: Enable ClustersetIP default for services exported on
                  this cluster.
                type: boolean
              colorCodes:
                type: string
              connectionHealthCheck:
                description: The gateway connection health check.
                properties:
                  enabled:
                    description: Enable the connection health check.
                    type: boolean
                  intervalSeconds:
                    description: The interval at which health check pings are sent.
                    format: int64
                    type: integer
                  maxPacketLossCount:
                    description: The maximum number of packets lost at which the health
                      checker will mark the connection as down.
                    format: int64
                    type: integer
                type: object
              coreDNSCustomConfig:
                description: |-
                  Name of the custom CoreDNS configmap to configure forwarding to Lighthouse.
                  It should be in <namespace>/<name> format where <namespace> is optional and defaults to kube-system.
                properties:
                  configMapName:
                    description: Name of the custom CoreDNS configmap.
                    type: string
                  namespace:
                    description: Namespace of the custom CoreDNS configmap.
                    type: string
                type: object
              customDomains:
                description: List of domains to use for multi-cluster service discovery.
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              debug:
                description: Enable operator debugging.
                type: boolean
              globalCIDR:
                description: The Global CIDR super-net range for allocating GlobalCIDRs
                  to each cluster.
                type: string
              haltOnCertificateError:
                description: Halt on certificate error (so the pod gets restarted).
                type: boolean
              hostedCluster:
                description: Is the cluster a hosted cluster.
                type: boolean
              imageOverrides:
                additionalProperties:
                  type: string
                description: Override component images.
                type: object
              loadBalancerEnabled:
                description: Enable automatic Load Balancer in front of the gateways.
                type: boolean
              namespace:
                description: The namespace in which to deploy the submariner operator.
                type: string
              natEnabled:
                description: Enable NAT between clusters.
                type: boolean
              nodeSelector:
                additionalProperties:
                  type: string
                type: object
              repository:
                description: The image repository.
                type: string
              serviceCIDR:
                description: The service CIDR.
                type: string
              serviceDiscoveryEnabled:
                description: Enable support for Service Discovery (Lighthouse).
                type: boolean
              tolerations:
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              version:
                description: The image tag.
                type: string
            required:
            - broker
            - brokerK8sApiServer
            - brokerK8sRemoteNamespace
            - ceIPSecDebug
            - clusterCIDR
            - clusterID
            - debug
            - namespace
            - natEnabled
            - serviceCIDR
            type: object
          status:
            description: SubmarinerStatus defines the observed state of Submariner.
            properties:
              airGappedDeployment:
                type: boolean
              clusterCIDR:
                description: The current cluster CIDR.
                type: string
              clusterID:
                description: The current cluster ID.
                type: string
              clustersetIPCIDR:
                description: The current clustersetIP CIDR.
                type: string
              colorCodes:
                type: string
              deploymentInfo:
                description: Information about the deployment.
                properties:
                  cloudProvider:
                    type: string
                  kubernetesType:
                    type: string
                  kubernetesTypeVersion:
                    type: string
                  kubernetesVersion:
                    type: string
                type: object
              gatewayDaemonSetStatus:
                description: The status of the gateway DaemonSet.
                properties:
                  lastResourceVersion:
                    type: string
                  mismatchedContainerImages:
                    type: boolean
                  nonReadyContainerStates:
                    items:
                      description: |-
                        ContainerState holds a possible state of container.
                        Only one of its members may be specified.
                        If none of them is specified, the default one is ContainerStateWaiting.
                      properties:
                        running:
                          description: Details about a running container
                          properties:
                            startedAt:
                              description: Time at which the container was last (re-)started
                              format: date-time
                              type: string
                          type: object
                        terminated:
                          description: Details about a terminated container
                          properties:
                            containerID:
                              description: Container's ID in the format '<type>://<container_id>'
                              type: string
                            exitCode:
                              description: Exit status from the last termination of
                                the container
                              format: int32
                              type: integer
                            finishedAt:
                              description: Time at which the container last terminated
                              format: date-time
                              type: string
                            message:
                              description: Message regarding the last termination
                                of the container
                              type: string
                            reason:
                              description: (brief) reason from the last termination
                                of the container
                              type: string
                            signal:
                              description: Signal from the last termination of the
                                container
                              format: int32
                              type: integer
                            startedAt:
                              description: Time at which previous execution of the
                                container started
                              format: date-time
                              type: string
                          required:
                          - exitCode
                          type: object
                        waiting:
                          description: Details about a waiting container
                          properties:
                            message:
                              description: Message regarding why the container is
                                not yet running.
                              type: string
                            reason:
                              description: (brief) reason the container is not yet
                                running.
                              type: string
                          type: object
                      type: object
                    type: array
                  status:
                    description: DaemonSetStatus represents the current status of
                      a daemon set.
                    properties:
                      collisionCount:
                        description: |-
                          Count of hash collisions for the DaemonSet. The DaemonSet controller
                          uses this field as a collision avoidance mechanism when it needs to
                          create the name for the newest ControllerRevision.
                        format: int32
                        type: integer
                      conditions:
                        description: Represents the latest available observations
                          of a DaemonSet's current state.
                        items:
                          description: DaemonSetCondition describes the state of a
                            DaemonSet at a certain point.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of DaemonSet condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - type
                        x-kubernetes-list-type: map
                      currentNumberScheduled:
                        description: |-
                          The number of nodes that are running at least 1
                          daemon pod and are supposed to run the daemon pod.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      desiredNumberScheduled:
                        description: |-
                          The total number of nodes that should be running the daemon
                          pod (including nodes correctly running the daemon pod).
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      numberAvailable:
                        description: |-
                          The number of nodes that should be running the
                          daemon pod and have one or more of the daemon pod running and
                          available (ready for at least spec.minReadySeconds)
                        format: int32
                        type: integer
                      numberMisscheduled:
                        description: |-
                          The number of nodes that are running the daemon pod, but are
                          not supposed to run the daemon pod.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      numberReady:
                        description: |-
                          numberReady is the number of nodes that should be running the daemon pod and have one
                          or more of the daemon pod running with a Ready Condition.
                        format: int32
                        type: integer
                      numberUnavailable:
                        description: |-
                          The number of nodes that should be running the
                          daemon pod and have none of the daemon pod running and available
                          (ready for at least spec.minReadySeconds)
                        format: int32
                        type: integer
                      observedGeneration:
                        description: The most recent generation observed by the daemon
                          set controller.
                        format: int64
                        type: integer
                      updatedNumberScheduled:
                        description: The total number of nodes that are running updated
                          daemon pod
                        format: int32
                        type: integer
                    required:
                    - currentNumberScheduled
                    - desiredNumberScheduled
                    - numberMisscheduled
                    - numberReady
                    type: object
                required:
                - mismatchedContainerImages
                type: object
              gateways:
                description: Status of the gateways in the cluster.
                items:
                  properties:
                    connections:
                      items:
                        properties:
                          endpoint:
                            properties:
                              backend:
                                type: string
                              backend_config:
                                additionalProperties:
                                  type: string
                                type: object
                              cable_name:
                                type: string
                              cluster_id:
                                maxLength: 63
                                minLength: 1
                                type: string
                              healthCheckIP:
                                description: 'Deprecated: Get/SetHealthCheckIP() or,
                                  if necessary, HealthCheckIPs'
                                type: string
                              healthCheckIPs:
                                items:
                                  type: string
                                maxItems: 2
                                type: array
                              hostname:
                                type: string
                              nat_enabled:
                                type: boolean
                              private_ip:
                                description: 'Deprecated: Use Get/SetPrivateIP() or,
                                  if necessary, PrivateIPs'
                                type: string
                              privateIPs:
                                items:
                                  type: string
                                maxItems: 2
                                type: array
                              public_ip:
                                description: 'Deprecated: Set/SetPublicIP() or, if
                                  necessary, PublicIPs'
                                type: string
                              publicIPs:
                                items:
                                  type: string
                                maxItems: 2
                                type: array
                              subnets:
                                items:
                                  type: string
                                type: array
                            required:
                            - backend
                            - cable_name
                            - cluster_id
                            - hostname
                            - nat_enabled
                            - subnets
                            type: object
                          latencyRTT:
                            description: |-
                              LatencySpec describes the round trip time information for a packet
                              between the gateway pods of two clusters.
                            properties:
                              average:
                                type: string
                              last:
                                type: string
                              max:
                                type: string
                              min:
                                type: string
                              stdDev:
                                type: string
                            type: object
                          status:
                            type: string
                          statusMessage:
                            type: string
                          usingIP:
                            type: string
                          usingNAT:
                            type: boolean
                        required:
                        - endpoint
                        - status
                        - statusMessage
                        type: object
                      type: array
                    haStatus:
                      type: string
                    localEndpoint:
                      properties:
                        backend:
                          type: string
                        backend_config:
                          additionalProperties:
                            type: string
                          type: object
                        cable_name:
                          type: string
                        cluster_id:
                          maxLength: 63
                          minLength: 1
                          type: string
                        healthCheckIP:
                          description: 'Deprecated: Get/SetHealthCheckIP() or, if
                            necessary, HealthCheckIPs'
                          type: string
                        healthCheckIPs:
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        hostname:
                          type: string
                        nat_enabled:
                          type: boolean
                        private_ip:
                          description: 'Deprecated: Use Get/SetPrivateIP() or, if
                            necessary, PrivateIPs'
                          type: string
                        privateIPs:
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        public_ip:
                          description: 'Deprecated: Set/SetPublicIP() or, if necessary,
                            PublicIPs'
                          type: string
                        publicIPs:
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        subnets:
                          items:
                            type: string
                          type: array
                      required:
                      - backend
                      - cable_name
                      - cluster_id
                      - hostname
                      - nat_enabled
                      - subnets
                      type: object
                    statusFailure:
                      type: string
                    version:
                      type: string
                  required:
                  - connections
                  - haStatus
                  - localEndpoint
                  - statusFailure
                  - version
                  type: object
                type: array
              globalCIDR:
                description: The current global CIDR.
                type: string
              globalnetDaemonSetStatus:
                description: The status of the Globalnet DaemonSet.
                properties:
                  lastResourceVersion:
                    type: string
                  mismatchedContainerImages:
                    type: boolean
                  nonReadyContainerStates:
                    items:
                      description: |-
                        ContainerState holds a possible state of container.
                        Only one of its members may be specified.
                        If none of them is specified, the default one is ContainerStateWaiting.
                      properties:
                        running:
                          description: Details about a running container
                          properties:
                            startedAt:
                              description: Time at which the container was last (re-)started
                              format: date-time
                              type: string
                          type: object
                        terminated:
                          description: Details about a terminated container
                          properties:
                            containerID:
                              description: Container's ID in the format '<type>://<container_id>'
                              type: string
                            exitCode:
                              description: Exit status from the last termination of
                                the container
                              format: int32
                              type: integer
                            finishedAt:
                              description: Time at which the container last terminated
                              format: date-time
                              type: string
                            message:
                              description: Message regarding the last termination
                                of the container
                              type: string
                            reason:
                              description: (brief) reason from the last termination
                                of the container
                              type: string
                            signal:
                              description: Signal from the last termination of the
                                container
                              format: int32
                              type: integer
                            startedAt:
                              description: Time at which previous execution of the
                                container started
                              format: date-time
                              type: string
                          required:
                          - exitCode
                          type: object
                        waiting:
                          description: Details about a waiting container
                          properties:
                            message:
                              description: Message regarding why the container is
                                not yet running.
                              type: string
                            reason:
                              description: (brief) reason the container is not yet
                                running.
                              type: string
                          type: object
                      type: object
                    type: array
                  status:
                    description: DaemonSetStatus represents the current status of
                      a daemon set.
                    properties:
                      collisionCount:
                        description: |-
                          Count of hash collisions for the DaemonSet. The DaemonSet controller
                          uses this field as a collision avoidance mechanism when it needs to
                          create the name for the newest ControllerRevision.
                        format: int32
                        type: integer
                      conditions:
                        description: Represents the latest available observations
                          of a DaemonSet's current state.
                        items:
                          description: DaemonSetCondition describes the state of a
                            DaemonSet at a certain point.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of DaemonSet condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - type
                        x-kubernetes-list-type: map
                      currentNumberScheduled:
                        description: |-
                          The number of nodes that are running at least 1
                          daemon pod and are supposed to run the daemon pod.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      desiredNumberScheduled:
                        description: |-
                          The total number of nodes that should be running the daemon
                          pod (including nodes correctly running the daemon pod).
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      numberAvailable:
                        description: |-
                          The number of nodes that should be running the
                          daemon pod and have one or more of the daemon pod running and
                          available (ready for at least spec.minReadySeconds)
                        format: int32
                        type: integer
                      numberMisscheduled:
                        description: |-
                          The number of nodes that are running the daemon pod, but are
                          not supposed to run the daemon pod.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      numberReady:
                        description: |-
                          numberReady is the number of nodes that should be running the daemon pod and have one
                          or more of the daemon pod running with a Ready Condition.
                        format: int32
                        type: integer
                      numberUnavailable:
                        description: |-
                          The number of nodes that should be running the
                          daemon pod and have none of the daemon pod running and available
                          (ready for at least spec.minReadySeconds)
                        format: int32
                        type: integer
                      observedGeneration:
                        description: The most recent generation observed by the daemon
                          set controller.
                        format: int64
                        type: integer
                      updatedNumberScheduled:
                        description: The total number of nodes that are running updated
                          daemon pod
                        format: int32
                        type: integer
                    required:
                    - currentNumberScheduled
                    - desiredNumberScheduled
                    - numberMisscheduled
                    - numberReady
                    type: object
                required:
                - mismatchedContainerImages
                type: object
              hostedCluster:
                description: Is the cluster a hosted cluster.
                type: boolean
              loadBalancerStatus:
                description: The status of the load balancer DaemonSet.
                properties:
                  status:
                    description: LoadBalancerStatus represents the status of a load-balancer.
                    properties:
                      ingress:
                        description: |-
                          Ingress is a list containing ingress points for the load-balancer.
                          Traffic intended for the service should be sent to these ingress points.
                        items:
                          description: |-
                            LoadBalancerIngress represents the status of a load-balancer ingress point:
                            traffic intended for the service should be sent to an ingress point.
                          properties:
                            hostname:
                              description: |-
                                Hostname is set for load-balancer ingress points that are DNS based
                                (typically AWS load-balancers)
                              type: string
                            ip:
                              description: |-
                                IP is set for load-balancer ingress points that are IP based
                                (typically GCE or OpenStack load-balancers)
                              type: string
                            ipMode:
                              description: |-
                                IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.
                                Setting this to "VIP" indicates that traffic is delivered to the node with
                                the destination set to the load-balancer's IP and port.
                                Setting this to "Proxy" indicates that traffic is delivered to the node or pod with
                                the destination set to the node's IP and node port or the pod's IP and port.
                                Service implementations may use this information to adjust traffic routing.
                              type: string
                            ports:
                              description: |-
                                Ports is a list of records of service ports
                                If used, every port defined in the service should have an entry in it
                              items:
                                description: PortStatus represents the error condition
                                  of a service port
                                properties:
                                  error:
                                    description: |-
                                      Error is to record the problem with the service port
                                      The format of the error shall comply with the following rules:
                                      - built-in error values shall be specified in this file and those shall use
                                        CamelCase names
                                      - cloud provider specific error values must have names that comply with the
                                        format foo.example.com/CamelCase.
                                    maxLength: 316
                                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                    type: string
                                  port:
                                    description: Port is the port number of the service
                                      port of which status is recorded here
                                    format: int32
                                    type: integer
                                  protocol:
                                    description: |-
                                      Protocol is the protocol of the service port of which status is recorded here
                                      The supported values are: "TCP", "UDP", "SCTP"
                                    type: string
                                required:
                                - error
                                - port
                                - protocol
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                type: object
              natEnabled:
                description: The current NAT status.
                type: boolean
              networkPlugin:
                description: The current network plugin.
                type: string
              routeAgentDaemonSetStatus:
                description: The status of the route agent DaemonSet.
                properties:
                  lastResourceVersion:
                    type: string
                  mismatchedContainerImages:
                    type: boolean
                  nonReadyContainerStates:
                    items:
                      description: |-
                        ContainerState holds a possible state of container.
                        Only one of its members may be specified.
                        If none of them is specified, the default one is ContainerStateWaiting.
                      properties:
                        running:
                          description: Details about a running container
                          properties:
                            startedAt:
                              description: Time at which the container was last (re-)started
                              format: date-time
                              type: string
                          type: object
                        terminated:
                          description: Details about a terminated container
                          properties:
                            containerID:
                              description: Container's ID in the format '<type>://<container_id>'
                              type: string
                            exitCode:
                              description: Exit status from the last termination of
                                the container
                              format: int32
                              type: integer
                            finishedAt:
                              description: Time at which the container last terminated
                              format: date-time
                              type: string
                            message:
                              description: Message regarding the last termination
                                of the container
                              type: string
                            reason:
                              description: (brief) reason from the last termination
                                of the container
                              type: string
                            signal:
                              description: Signal from the last termination of the
                                container
                              format: int32
                              type: integer
                            startedAt:
                              description: Time at which previous execution of the
                                container started
                              format: date-time
                              type: string
                          required:
                          - exitCode
                          type: object
                        waiting:
                          description: Details about a waiting container
                          properties:
                            message:
                              description: Message regarding why the container is
                                not yet running.
                              type: string
                            reason:
                              description: (brief) reason the container is not yet
                                running.
                              type: string
                          type: object
                      type: object
                    type: array
                  status:
                    description: DaemonSetStatus represents the current status of
                      a daemon set.
                    properties:
                      collisionCount:
                        description: |-
                          Count of hash collisions for the DaemonSet. The DaemonSet controller
                          uses this field as a collision avoidance mechanism when it needs to
                          create the name for the newest ControllerRevision.
                        format: int32
                        type: integer
                      conditions:
                        description: Represents the latest available observations
                          of a DaemonSet's current state.
                        items:
                          description: DaemonSetCondition describes the state of a
                            DaemonSet at a certain point.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of DaemonSet condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - type
                        x-kubernetes-list-type: map
                      currentNumberScheduled:
                        description: |-
                          The number of nodes that are running at least 1
                          daemon pod and are supposed to run the daemon pod.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      desiredNumberScheduled:
                        description: |-
                          The total number of nodes that should be running the daemon
                          pod (including nodes correctly running the daemon pod).
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      numberAvailable:
                        description: |-
                          The number of nodes that should be running the
                          daemon pod and have one or more of the daemon pod running and
                          available (ready for at least spec.minReadySeconds)
                        format: int32
                        type: integer
                      numberMisscheduled:
                        description: |-
                          The number of nodes that are running the daemon pod, but are
                          not supposed to run the daemon pod.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                        format: int32
                        type: integer
                      numberReady:
                        description: |-
                          numberReady is the number of nodes that should be running the daemon pod and have one
                          or more of the daemon pod running with a Ready Condition.
                        format: int32
                        type: integer
                      numberUnavailable:
                        description: |-
                          The number of nodes that should be running the
                          daemon pod and have none of the daemon pod running and available
                          (ready for at least spec.minReadySeconds)
                        format: int32
                        type: integer
                      observedGeneration:
                        description: The most recent generation observed by the daemon
                          set controller.
                        format: int64
                        type: integer
                      updatedNumberScheduled:
                        description: The total number of nodes that are running updated
                          daemon pod
                        format: int32
                        type: integer
                    required:
                    - currentNumberScheduled
                    - desiredNumberScheduled
                    - numberMisscheduled
                    - numberReady
                    type: object
                required:
                - mismatchedContainerImages
                type: object
              serviceCIDR:
                description: The current service CIDR.
                type: string
              version:
                description: The image version in use by the various Submariner DaemonSets
                  and Deployments.
                type: string
            required:
            - clusterID
            - natEnabled
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
`
	Deploy_crds_submariner_io_servicediscoveries_yaml = `---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: servicediscoveries.submariner.io
spec:
  group: submariner.io
  names:
    kind: ServiceDiscovery
    listKind: ServiceDiscoveryList
    plural: servicediscoveries
    singular: servicediscovery
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceDiscovery is the Schema for the servicediscoveries API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServiceDiscoverySpec defines the desired state of ServiceDiscovery.
            properties:
              brokerK8sApiServer:
                type: string
              brokerK8sApiServerToken:
                type: string
              brokerK8sCA:
                type: string
              brokerK8sInsecure:
                type: boolean
              brokerK8sRemoteNamespace:
                type: string
              brokerK8sSecret:
                type: string
              clusterCIDR:
                type: string
              clusterID:
                type: string
              clustersetIPCIDR:
                type: string
              clustersetIPEnabled:
                type: boolean
              coreDNSCustomConfig:
                properties:
                  configMapName:
                    description: Name of the custom CoreDNS configmap.
                    type: string
                  namespace:
                    description: Namespace of the custom CoreDNS configmap.
                    type: string
                type: object
              customDomains:
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              debug:
                type: boolean
              globalnetEnabled:
                type: boolean
              haltOnCertificateError:
                type: boolean
              imageOverrides:
                additionalProperties:
                  type: string
                type: object
              namespace:
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                type: object
              repository:
                type: string
              tolerations:
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              version:
                type: string
            required:
            - brokerK8sApiServer
            - brokerK8sRemoteNamespace
            - clusterID
            - debug
            - namespace
            type: object
          status:
            description: ServiceDiscoveryStatus defines the observed state of ServiceDiscovery.
            properties:
              deploymentInfo:
                properties:
                  cloudProvider:
                    type: string
                  kubernetesType:
                    type: string
                  kubernetesTypeVersion:
                    type: string
                  kubernetesVersion:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
`
	Config_broker_broker_admin_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-k8s-broker-admin
`
	Config_broker_broker_admin_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: submariner-k8s-broker-admin
rules:
  - apiGroups:
      - submariner.io
    resources:
      - clusters
      - endpoints
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
      - delete
  - apiGroups:
      - submariner.io
    resources:
      - brokers
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
      - secrets
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - create
      - get
      - list
      - delete
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
      - serviceimports/status
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
      - delete
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
      - endpointslices/restricted
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
      - delete
`
	Config_broker_broker_admin_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: submariner-k8s-broker-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: submariner-k8s-broker-admin
subjects:
  - kind: ServiceAccount
    name: submariner-k8s-broker-admin
`
	Config_broker_broker_client_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-k8s-broker-client
`
	Config_broker_broker_client_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: submariner-k8s-broker-cluster
rules:
  - apiGroups:
      - submariner.io
    resources:
      - clusters
      - endpoints
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
      - delete
  - apiGroups:
      - submariner.io
    resources:
      - brokers
    verbs:
      - get
      - list
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
      - serviceimports/status
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
      - delete
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
      - endpointslices/restricted
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
`
	Config_broker_broker_client_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: submariner-k8s-broker-client
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: submariner-k8s-broker-cluster
subjects:
  - kind: ServiceAccount
    name: submariner-k8s-broker-client
`
	Config_rbac_submariner_operator_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-operator
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
`
	Config_rbac_submariner_operator_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-operator
rules:
  - apiGroups:
      - ""
    resources:
      # For metrics
      - services
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - ""
    resources:
      # For syncing Secrets from the broker
      - secrets
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - monitoring.coreos.com
    resources:
      # Needed for openshift monitoring
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resourceNames:
      - submariner-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - submariner.io
    resources:
      - brokers
      - brokers/status
      - submariners
      - submariners/status
      - servicediscoveries
      - servicediscoveries/status
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - submariner.io
    resources:
      - gateways
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - submariners/finalizers
      - servicediscoveries/finalizers
    verbs:
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
`
	Config_rbac_submariner_operator_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-operator
subjects:
  - kind: ServiceAccount
    name: submariner-operator
roleRef:
  kind: Role
  name: submariner-operator
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_operator_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: submariner-operator
rules:
  # submariner-operator updates the config map of core-dns to forward requests to
  # clusterset.local to Lighthouse DNS, also looks at existing configmaps
  # to figure out network settings
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
  - apiGroups:
      - ""
    resources:
      # Needed for network settings discovery
      - pods
      - services
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - operator.openshift.io
    resources:
      - dnses
    verbs:
      - get
      - update
  - apiGroups:
      - config.openshift.io
    resources:
      # Needed for network settings discovery
      - networks
    resourceNames:
      - cluster
    verbs:
      - get
  - apiGroups:
      - monitoring.coreos.com
    resources:
      # Needed for openshift monitoring
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resources:
      # Needed for Flannel CNI discovery
      - daemonsets
    verbs:
      - list
`
	Config_rbac_submariner_operator_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-operator
subjects:
  - kind: ServiceAccount
    name: submariner-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: submariner-operator
`
	Config_rbac_submariner_operator_ocp_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ocp-submariner-operator
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
  - apiGroups:
      - config.openshift.io
    resources:
      - infrastructures
    verbs:
      - get
`
	Config_rbac_submariner_operator_ocp_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ocp-submariner-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocp-submariner-operator
subjects:
  - kind: ServiceAccount
    name: submariner-operator
`
	Config_rbac_submariner_gateway_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-gateway
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
secrets:
  - name: submariner-broker-secret
  - name: submariner-ipsec-psk
`
	Config_rbac_submariner_gateway_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-gateway
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - submariner.io
    resources:
      - clusters
      - endpoints
      - gateways
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
`
	Config_rbac_submariner_gateway_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-gateway
subjects:
  - kind: ServiceAccount
    name: submariner-gateway
roleRef:
  kind: Role
  name: submariner-gateway
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_gateway_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: submariner-gateway
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - nodes
    verbs:
      - get
      - list
      - watch
`
	Config_rbac_submariner_gateway_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-gateway
subjects:
  - kind: ServiceAccount
    name: submariner-gateway
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: submariner-gateway
`
	Config_rbac_submariner_gateway_ocp_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ocp-submariner-gateway
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
`
	Config_rbac_submariner_gateway_ocp_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ocp-submariner-gateway
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocp-submariner-gateway
subjects:
  - kind: ServiceAccount
    name: submariner-gateway
`
	Config_rbac_submariner_route_agent_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-routeagent
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
`
	Config_rbac_submariner_route_agent_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-routeagent
rules:
  - apiGroups:
      - submariner.io
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - gatewayroutes
      - nongatewayroutes
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - submariner.io
    resources:
      - routeagents
    verbs:
      - get
      - list
      - create
      - update
      - delete
`
	Config_rbac_submariner_route_agent_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-routeagent
subjects:
  - kind: ServiceAccount
    name: submariner-routeagent
roleRef:
  kind: Role
  name: submariner-routeagent
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_route_agent_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: submariner-routeagent
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - configmaps
      - endpoints
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
    resourceNames:
      # the route agent needs access to the ovn secret
      - ovn-cert
    verbs:
      - get
  - apiGroups:
      - config.openshift.io
    resources:
      - networks
    resourceNames:
      - cluster
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      # route agent needs to annotate nodes to prevent OVNK SNAT
      - update
  - apiGroups:
      - projectcalico.org
    resources:
      - ippools
    verbs:
      - get
      - create
      - delete
      - update
      - deletecollection
`
	Config_rbac_submariner_route_agent_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-routeagent
subjects:
  - kind: ServiceAccount
    name: submariner-routeagent
roleRef:
  kind: ClusterRole
  name: submariner-routeagent
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_route_agent_ocp_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ocp-submariner-routeagent
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
`
	Config_rbac_submariner_route_agent_ocp_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ocp-submariner-routeagent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocp-submariner-routeagent
subjects:
  - kind: ServiceAccount
    name: submariner-routeagent
`
	Config_rbac_submariner_globalnet_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-globalnet
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
`
	Config_rbac_submariner_globalnet_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-globalnet
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
  - apiGroups:
      - submariner.io
    resources:
      - gateways
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
`
	Config_rbac_submariner_globalnet_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-globalnet
subjects:
  - kind: ServiceAccount
    name: submariner-globalnet
roleRef:
  kind: Role
  name: submariner-globalnet
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_globalnet_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: submariner-globalnet
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
  - apiGroups:
      - submariner.io
    resources:
      - clusters
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - clusterglobalegressips
      - clusterglobalegressips/status
      - globalegressips
      - globalegressips/status
      - globalingressips
      - globalingressips/status
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - deletecollection
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - network.openshift.io
    resources:
      - service/externalips
    verbs:
      - create
      - get
      - list
      - delete
`
	Config_rbac_submariner_globalnet_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-globalnet
subjects:
  - kind: ServiceAccount
    name: submariner-globalnet
roleRef:
  kind: ClusterRole
  name: submariner-globalnet
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_globalnet_ocp_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ocp-submariner-globalnet
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
`
	Config_rbac_submariner_globalnet_ocp_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ocp-submariner-globalnet
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocp-submariner-globalnet
subjects:
  - kind: ServiceAccount
    name: submariner-globalnet
`
	Config_rbac_submariner_diagnose_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-diagnose
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
`
	Config_rbac_submariner_diagnose_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-diagnose
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - create
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - configmaps
      - namespaces
    verbs:
      - get
      - list
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
    verbs:
      - get
      - list
  - apiGroups:
      - submariner.io
    resources:
      - brokers
      - clusters
      - endpoints
      - gateways
      - gatewayroutes
      - nongatewayroutes
      - servicediscoveries
      - submariners
      - routeagents
    verbs:
      - get
      - list
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
      - serviceimports
    verbs:
      - get
      - list
`
	Config_rbac_submariner_diagnose_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-diagnose
subjects:
  - kind: ServiceAccount
    name: submariner-diagnose
roleRef:
  kind: Role
  name: submariner-diagnose
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_diagnose_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: submariner-diagnose
rules:
  # submariner-diagnose runs subctl diagnose to troubleshoot submariner
  # dpeloyment
  - apiGroups:  # nodes are looked up to figure out network settings
      - ""
    resources:
      - configmaps
      - nodes
      - services
    verbs:
      - get
      - list
  - apiGroups:
      - submariner.io
    resources:
      - clusterglobalegressips
      - globalegressips
      - globalingressips
    verbs:
      - get
      - list
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
      - serviceimports
    verbs:
      - get
      - list
`
	Config_rbac_submariner_diagnose_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-diagnose
subjects:
  - kind: ServiceAccount
    name: submariner-diagnose
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: submariner-diagnose
`
	Config_rbac_submariner_diagnose_ocp_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ocp-submariner-diagnose
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
`
	Config_rbac_submariner_diagnose_ocp_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ocp-submariner-diagnose
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocp-submariner-diagnose
subjects:
  - kind: ServiceAccount
    name: submariner-diagnose
`
	Config_rbac_lighthouse_agent_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-lighthouse-agent
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
secrets:
  - name: submariner-broker-secret
`
	Config_rbac_lighthouse_agent_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: submariner-lighthouse-agent
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
      - endpointslices/restricted
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - deletecollection
  - apiGroups:
      - submariner.io
    resources:
      - gateways
      - globalingressips
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
      - serviceimports/status
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports/status
    verbs:
      - update
`
	Config_rbac_lighthouse_agent_cluster_role_binding_yaml = `---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-lighthouse-agent
subjects:
  - kind: ServiceAccount
    name: submariner-lighthouse-agent
roleRef:
  kind: ClusterRole
  name: submariner-lighthouse-agent
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_lighthouse_agent_ocp_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ocp-submariner-lighthouse-agent
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
`
	Config_rbac_lighthouse_agent_ocp_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ocp-submariner-lighthouse-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocp-submariner-lighthouse-agent
subjects:
  - kind: ServiceAccount
    name: submariner-lighthouse-agent
`
	Config_rbac_lighthouse_coredns_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-lighthouse-coredns
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
`
	Config_rbac_lighthouse_coredns_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: submariner-lighthouse-coredns
rules:
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - gateways
      - submariners
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
    verbs:
      - get
      - list
      - watch
`
	Config_rbac_lighthouse_coredns_cluster_role_binding_yaml = `---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-lighthouse-coredns
subjects:
  - kind: ServiceAccount
    name: submariner-lighthouse-coredns
roleRef:
  kind: ClusterRole
  name: submariner-lighthouse-coredns
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_lighthouse_coredns_ocp_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ocp-submariner-lighthouse-coredns
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
`
	Config_rbac_lighthouse_coredns_ocp_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ocp-submariner-lighthouse-coredns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocp-submariner-lighthouse-coredns
subjects:
  - kind: ServiceAccount
    name: submariner-lighthouse-coredns
`
	Config_openshift_rbac_submariner_metrics_reader_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: submariner-metrics-reader
  namespace: submariner-operator
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
`
	Config_openshift_rbac_submariner_metrics_reader_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-submariner-metrics
subjects:
  - kind: ServiceAccount
    name: prometheus-k8s
    namespace: openshift-monitoring
roleRef:
  kind: Role
  name: submariner-metrics-reader
  apiGroup: rbac.authorization.k8s.io
`
)
